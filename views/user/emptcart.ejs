<%- include("../partials/userloggedheder.ejs") %>

<div class="container-fluid d-flex cartpage">
  <div id="leftside" class="" style="width: 80%; min-height: 50vh ">
    <table id="example" class="table table-striped table-responsive">
      <thead>
        <tr>
          <th style="width: 5%;">SL NO</th>
          <th style="width: 10%;">IMAGE</th>
          <th style="width: 30%;">NAME</th>
          <th style="width: 15%;">QTY</th>
          <th style="width: 20%;">UNIT PRICE</th>
          <th style="width: 25%;">TOTAL PRICE</th>
          <th style="width: 10%;">CANCEL</th>
        </tr>
      </thead>
      <tbody>
        
      </tbody>
    </table>
  </div>

  <div id="rightside" class="m-3 pt-5 ">
    <div class="empty-cart-message">
      <h4>Your cart is empty!</h4>
  </div>
  </div>
</div>

<%- include("../partials/footer.ejs") %>

<script>
  // Initialize DataTable
new DataTable("#example");
  var currentQty;
  var priceOfItem;
  var price;

  function priceCalculation(index) {
    let priceOfItemElement = document.getElementById(`unitPrice_${index}`);
    priceOfItem = parseInt(priceOfItemElement.textContent.replace(/\D/g, ''), 10);
    price = priceOfItem * currentQty;
    let currencySymbol = 'â‚¹';
    let totalPriceElement = document.getElementById(`totalPrice_${index}`);
  totalPriceElement.innerHTML = `${currencySymbol} ${price}`;
   updateQuantitydecrOnServer(index, currentQty);
  
  }



  function  updateQuantitydecrOnServer(index, currentQty) {
    fetch("/quantityUpdate", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Accept": "application/json", // Add this line to accept JSON response
        },
        body: JSON.stringify({
          index: index,
          quantity: currentQty,
          price: price, // Corrected from Price to price
        }),
      })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        // Check for success based on your server's response, e.g., status code or specific data
        response.json() ;
      })
      .then(data => {
       
        console.log("Success:", data);
        
        console.log("in fetch",index);
      })
      .catch(error => {
        // Handle errors here
        console.error("Error:", error);
      });
  }

  // Function to increment quantity
  function incrementQuantity(index) {
    let priceOfItemElement = document.getElementById(`unitPrice_${index}`);
    priceOfItem = parseInt(priceOfItemElement.textContent.replace(/\D/g, ''), 10);
    currentQty = parseInt(document.getElementById(`displayqty_${index}`).textContent);

    if (currentQty < 4) {
      currentQty += 1;
      document.getElementById(`displayqty_${index}`).textContent = currentQty;
      document.getElementById(`limit_${index}`).innerHTML = "";
      priceCalculation(index);
      // Update the server or perform other necessary actions
      // Corrected the function name
    } else {
      document.getElementById(`limit_${index}`).innerHTML = "Reached the max limit";
    }
  }

  // Function to decrement quantity
  function decrementQuantity(index) {
    let priceOfItemElement = document.getElementById(`unitPrice_${index}`);
    priceOfItem = parseInt(priceOfItemElement.textContent.replace(/\D/g, ''), 10);
    currentQty = parseInt(document.getElementById(`displayqty_${index}`).textContent);

    if (currentQty > 1) {
      currentQty -= 1;
      document.getElementById(`displayqty_${index}`).textContent = currentQty;
      document.getElementById(`limit_${index}`).innerHTML = "";
      priceCalculation(index);
      // Update the server or perform other necessary actions
    } else {
      document.getElementById(`limit_${index}`).innerHTML = "Reached the min quantity";
    }
  }

  //delete the particular item from the cart.
  function deleteItem(pos,id) {
    fetch("/itemdelete", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json", 
      },
      body: JSON.stringify({
        deleteIndex: pos,
        id:id
      }),
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      // Check for success based on your server's response, e.g., status code or specific data
    
      return response.json();
   
    })
    .then(data => {
      // Handle the response data if needed
      console.log("Success:", data);
   
      console.log("in fetch",index);
    })
    .catch(error => {
      // Handle errors here
      console.error("Error:", error);
    });
  }
</script>

<style>
  #example {
    width: 100%;
  }

  #example_filter {
    text-align: right;
  }

  #rightside {
    width: 20%;
  }

  @media (max-width: 768px) {
    .cartpage {
      flex-direction: column;
    }

    #example_filter {
      padding-top: 20px;
      text-align: left;
    }

    #example_paginate {
      padding-top: 30px;
    }

    #rightside {
      width: auto;
      margin: 0;
      white-space: nowrap;
    }
  }

  ul {
    list-style: none;
    padding: 0;
  }

  li {
    text-decoration: none;
  }

  #rightside {
    background-color: #333333;
    padding: 5px;
    color: #ffffff;
  }

  #summary {
    text-align: center;
  }

  .quantity-cell {
    display: flex;
    align-items: center;
  }

  .quantity-button {
    background-color: #df1919;
    color: #ffffff;
    cursor: pointer;
    margin: 0 5px;
  }

  .quantity-button i {
    font-size: 18px;
  }

  .quantity-display {
    font-size: 16px;
  }

  #qtybox {
    border: solid 1px black;
    padding: 8px;
  }


  .empty-cart-message {
    text-align: center;
    font-size: 24px;
    color: #555;
    margin-top: 20px;
  }
</style>

<%- include("../partials/adminheader.ejs") %>

<div class="container">
  <div class="mt-4">
    <a href="/admin/listProduct"> <button>LIST PRODUCT</button></a>
  </div>

  <form>
    <div class="mb-3">
      <label for="productName" class="form-label">Product Name</label>
      <input
        type="text"
        class="form-control"
        id="productName"
        name="productName"
        value="<%=urlData.proData.productName%>"
      />
    </div>
    <div id="productNameMessage" class="text-danger m-3" ></div>




    <div class="mb-3">
      <label for="productDescription" class="form-label"
        >Product Description</label
      >
      <input
        type="text"
        class="form-control"
        id="productDescription"
        name="productDescription"
        value="<%=urlData.proData. productDescription%>"
      />
    </div>
    <div id="productDescriptionMessage" class="text-danger m-3" ></div>



    <div class="d-flex justify-content-between">
              <div class="mb-3">
                <label for="productPrice" class="form-label">Product Price</label>
                <input
                  type="tel"
                  class="form-control"
                  id="productPrice"
                  name="productPrice"
                  value="<%=urlData.proData.productPrice%>"
                />
              </div>
              <div id="productPriceMessage" class="text-danger m-3" ></div>


              <div class="mb-3">
                <label for="productCategory" class="form-label">Product Category</label>
                <select
                    class="form-select"
                    id="productCategory"
                    name="productCategory"
                    required
                >
                    <option value="" disabled selected>Select a category</option>
                    <% urlData.cate.forEach(category => { %>
                        <option value="<%= category._id %>" <% if(category._id.toString() === urlData.proData.productCategory.toString()) { %> selected <% } %>>
                            <%= category.categoryName %>
                        </option>
                    <% }) %>
                </select>
              </div>
              <div id="productCategoryMessage" class="text-danger m-3" ></div>


              <div class="mb-3">
                <label for="productStrapColour" class="form-label">Strap colour</label>
                <input type="text" 
                class="form-control" 
                id="productStrapColour" 
                name="productStrapColour"
                value="<%=urlData.proData.StrapColour%>"
                />
                <div id="productStrapColourMessage" class="text-danger m-3"></div>
              </div>
          
    </div>
  


    <div class="d-flex justify-content-between">
          <div class="mb-3">
            <label for="productsize" class="form-label">Size</label>
            <input
              type="tel"
              class="form-control"
              id="productsize"
              name="productsize"
              value="<%=urlData.proData.variant[0].productsize%>"
            />
          </div>
          <div id="productsizeMessage" class="text-danger m-3" ></div>

          <div class="mb-3">
            <label for="productcolour" class="form-label">Colour</label>
            <input
              type="text"
              class="form-control"
              id="productcolour"
              name="productcolour"
              value="<%=urlData.proData.variant[0].productcolour%>"
            />
          </div>
          <div id="productcolourMessage" class="text-danger m-3" ></div>

          <div class="mb-3">
            <label for="stockCount" class="form-label">Stock Count</label>
            <input
              type="tel"
              class="form-control"
              id="stockCount"
              name="stockCount"
              value="<%=urlData.proData.stockCount%>"
            />
          </div>
          <div id="stockCountMessage" class="text-danger m-3" ></div>

    </div>




    <div class="d-flex justify-content-between">
      <div class="mb-3">
          <label for="productDialShape" class="form-label">Dial shape:</label>
          <input type="text" 
          class="form-control" 
          id="productDialShape" 
          name="productDialShape" 
          value="<%=urlData.proData.dialShape%>"
          />
      </div>
        <div id="productDialShapeMessage" class="text-danger m-3"></div>
    
          
        <div class="mb-3">
          <label for="productMadeIn" class="form-label">Made in</label>
          <input type="text" 
          class="form-control" 
          id="productMadeIn" 
          name="productMadeIn"
          value="<%=urlData.proData.MadeIn%>" 
          />
        </div>
          <div id="productMadeInMessage" class="text-danger m-3"></div>
         
          <div class="mb-3">
          <label for="strapmaterial" class="form-label">Strap material</label>
          <input type="text" 
          class="form-control" 
          id="strapmaterial" 
          name="strapmaterial"
          value="<%=urlData.proData.StrapMaterial%>"
          />
          <div id="strapmaterialMessage" class="text-danger m-3"></div>
     </div>
  </div>
  
  
  <div class="d-flex justify-content-between">
      <div class="mb-3">
          <label for="waterresistant" class="form-label">Water resistant</label>
          <input type="text" 
          class="form-control" 
          id="waterresistant" 
          name="waterresistant"
          value="<%=urlData.proData.waterResistant%>"
          />
          <div id="waterresistantMessage" class="text-danger m-3"></div>
      </div>
  
      <div class="mb-3">
          <label for="productdisplay" class="form-label">Display</label>
          <input type="text" 
          class="form-control" 
          id="productdisplay" 
          name="productdisplay"
          value="<%=urlData.proData.display%>"
          />
          <div id="productdisplayMessage" class="text-danger m-3"></div>
      </div>
  
      <div class="mb-3">
          <label for="calling" class="form-label">Calling</label>
          <input type="text" 
          class="form-control" 
          id="calling" 
          name="calling"
          value="<%=urlData.proData.call%>"
          />
          <div id="callingMessage" class="text-danger m-3"></div>
      </div>
  </div>
  
  
  
  <div class="d-flex justify-content-between">
      <div class="mb-3">
          <label for="productfastCharge" class="form-label">Fast charge</label>
          <input type="text" 
          class="form-control" 
          id="productfastCharge" 
          name="productfastCharge"
          value="<%=urlData.proData.fastCharge%>"
          />
          <div id="productfastChargeMessage" class="text-danger m-3"></div>
      </div>
  
      <div class="mb-3">
          <label for="productbattery" class="form-label">Battery</label>
          <input type="text"
           class="form-control" 
           id="productbattery" 
           name="productbattery"
           value="<%=urlData.proData.battery%>"
           />
          <div id="productbatteryMessage" class="text-danger m-3"></div>
      </div>
  
      <div class="mb-3">
          <label for="weight" class="form-label">Weight</label>
          <input type="text"
           class="form-control" 
           id="weight" 
           name="weight"
           value="<%=urlData.proData.weight%>"
           />
          <div id="weightMessage" class="text-danger m-3"></div>
      </div>
  </div>
  
  
  <div class="d-flex justify-content-between">
      <div class="mb-3">
          <label for="productbluetooth" class="form-label">Bluetooth</label>
          <input type="text" 
          class="form-control" 
          id="productbluetooth" 
          name="productbluetooth" 
          value="<%=urlData.proData.bluetooth%>"
          />
          <div id="productbluetoothMessage" class="text-danger m-3"></div>
      </div>
  
      <div class="mb-3">
          <label for="productWarranty" class="form-label">Warranty</label>
          <input type="text"
           class="form-control" 
           id="productWarranty" 
           name="productWarranty"
           value="<%=urlData.proData.Warranty%>"
           />
          <div id="productWarrantyMessage" class="text-danger m-3"></div>
      </div>
  
      <div class="mb-3">
          <label for="wifi" class="form-label">WiFi</label>
          <input type="text" 
          class="form-control" 
          id="wifi" 
          name="wifi"
          value="<%=urlData.proData.wifi%>"
          />
          <div id="wifiMessage" class="text-danger m-3"></div>
      </div>
  </div>










    <hr>
    <label for="productImage" class="form-label">Product Image</label>
    <div class="container mt-3 w-100">
      <div class="card shadow-sw w-100 imagebox">
        <div id="img1">
          <img src="<%=urlData.proData.productImage[0].image1%>" />
          <label for="image1" class="form-label m-4 text-primary">Image1</label>
          <input
            type="file"
            class="form-control"
            id="productimg1"
            index=0
            accept="image/*"
            onchange="image_select(event, 'img1')"
          />

          <div id="errMessage1" class="text-danger m-3" ></div>
        </div>

        <div id="img2">
          <img src="<%=urlData.proData.productImage[0].image2%>" />
          <label for="image2" class="form-label m-4 text-primary">Image2</label>
          <input
            type="file"
            class="form-control"
            id="productimg2"
            index=1
            accept="image/*"
            onchange="image_select(event, 'img2')"
          />
          <div id="errMessage2" class="text-danger m-3" ></div>
        </div>

        <div id="img3">
          <img src="<%=urlData.proData.productImage[0].image3%>" />
          <label for="image3" class="form-label m-4 text-primary">Image3</label>
          <input
            type="file"
            class="form-control"
            id="productimg3"
            index=2
            accept="image/*"
            onchange="image_select(event, 'img3')"
          />
          <div id="errMessage3" class="text-danger m-3" ></div>
        </div>

        <div id="img4">
          <img src="<%=urlData.proData.productImage[0].image4%>" />
          <label for="image4" class="form-label m-4 text-primary">Image4</label>
          <input
            type="file"
            class="form-control"
            id="productimg4"
            index=3
            accept="image/*"
            onchange="image_select(event, 'img4')"
          />
          <div id="errMessage4" class="text-danger m-3" ></div>
        </div>

        <div id="img5">
          <img src="<%=urlData.proData.productImage[0].image5%>" />
          <label for="image5" class="form-label m-4 text-primary">Image5</label>
          <input
            type="file"
            class="form-control"
            id="productimg5"
            index=4
            accept="image/*"
            onchange="image_select(event, 'img5')"
          />
          <div id="errMessage5" class="text-danger m-3" ></div>
        </div>
      </div>
    </div>

    <button type="button" productId="<%=urlData.proData._id%>" class="btn btn-primary" onclick="submitForm(this)">
      Update the data
    </button>


  </form>
<br>
  <%- include("../partials/adminfooter.ejs") %>




  <script>
    

    let newImage = [];

    function image_select(event, id) {
      let inputElement = event.target;
      let imageElement = document.getElementById(id);

      let imgElement = document
        .getElementById(id)
        .getElementsByTagName("img")[0];

       let index = inputElement.getAttribute("index");
      

      // Get the new selected image
      let selectedFile = inputElement.files[0];
     

      newImage.push({ index: index, file:selectedFile });
      // Create a FileReader to read the selected file
      let reader = new FileReader();

      // Set up the FileReader to update the image src when the file is read
      reader.onload = function (e) {
      // Updating the src attribute of the image element
        imgElement.src = e.target.result;
      };

      // Read the selected file as a data URL
      reader.readAsDataURL(selectedFile);



    }

      function submitForm(button){

        if(!addProVlidation()){
          return;
      }

        let id=button.getAttribute("productId")
        console.log(id)

        const formData = new FormData();
        formData.append('productName', document.getElementById('productName').value);
        formData.append('productDescription', document.getElementById('productDescription').value);
        formData.append('productPrice', document.getElementById('productPrice').value);
        formData.append('productCategory', document.getElementById('productCategory').value);
        
        formData.append('productsize', document.getElementById('productsize').value);
        formData.append('productcolour', document.getElementById('productcolour').value);
        formData.append('stockCount', document.getElementById('stockCount').value);



        if (newImage) {
          newImage.forEach((x) => {
              formData.append('productImages[]', x.file);
              formData.append('imageIndexes[]', x.index);
          });
      }

      

        console.log([...formData]);

        fetch("/admin/editProduct/"+id,{
            method: 'POST', 
            body: formData,
          })
          .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log('Form submitted successfully:', data);
            
        })
        .catch(error => console.error('Error submitting form:', error.message));
      }
      
     
      function addProVlidation() {
        let isValid = true;
        let productName = document.getElementById('productName').value;
        let productDescription = document.getElementById('productDescription').value;
        let productPrice = document.getElementById('productPrice').value;
        let productCategory = document.getElementById("productCategory").value;
        let productsize = document.getElementById("productsize").value;
        let productcolour = document.getElementById("productcolour").value;
        let stockCount = document.getElementById("stockCount").value;
    
        let productDialShape = document.getElementById('productDialShape').value;
        let productMadeIn = document.getElementById('productMadeIn').value;
        let strapmaterial = document.getElementById('strapmaterial').value;
        let waterresistant = document.getElementById('waterresistant').value;
        let productdisplay = document.getElementById('productdisplay').value;
        let calling = document.getElementById('calling').value;
        let productfastCharge = document.getElementById('productfastCharge').value;
        let productbattery = document.getElementById('productbattery').value;
        let weight = document.getElementById('weight').value;
        let productbluetooth = document.getElementById('productbluetooth').value;
        let productWarranty = document.getElementById('productWarranty').value;
        let wifi = document.getElementById('wifi').value;
        let productStrapColour = document.getElementById('productStrapColour').value;



        let productNameMessage = document.getElementById('productNameMessage');
        let productDescriptionMessage = document.getElementById('productDescriptionMessage');
        let productPriceMessage = document.getElementById('productPriceMessage');
        let productCategoryMessage = document.getElementById('productCategoryMessage');
        let productsizeMessage = document.getElementById('productsizeMessage');
        let productcolourMessage = document.getElementById('productcolourMessage');
        let stockCountMessage = document.getElementById('stockCountMessage');
    
        let productDialShapeMessage = document.getElementById('productDialShapeMessage');
        let productMadeInMessage = document.getElementById('productMadeInMessage');
        let strapmaterialMessage = document.getElementById('strapmaterialMessage');
        let waterresistantMessage = document.getElementById('waterresistantMessage');
        let productdisplayMessage = document.getElementById('productdisplayMessage');
        let callingMessage = document.getElementById('callingMessage');
        let productfastChargeMessage = document.getElementById('productfastChargeMessage');
        let productbatteryMessage = document.getElementById('productbatteryMessage');
        let weightMessage = document.getElementById('weightMessage');
        let productbluetoothMessage = document.getElementById('productbluetoothMessage');
        let productWarrantyMessage = document.getElementById('productWarrantyMessage');
        let wifiMessage = document.getElementById('wifiMessage');
        let productStrapColourMessage = document.getElementById('productStrapColourMessage');



        const validTypes = ['image/jpeg', 'image/png'];
        let imgz1=document.getElementById("productimg1");
        let imgz2=document.getElementById("productimg2");
        let imgz3=document.getElementById("productimg3");
        let imgz4=document.getElementById("productimg4");
        let imgz5=document.getElementById("productimg5");

        let errMess1 = document.getElementById('errMessage1');
        let errMess2 = document.getElementById('errMessage2');
        let errMess3 = document.getElementById('errMessage3');
        let errMess4 = document.getElementById('errMessage4');
        let errMess5 = document.getElementById('errMessage5');
    
        errMess1.innerText = '';
        errMess2.innerText = '';
        errMess3.innerText = '';
        errMess4.innerText = '';
        errMess5.innerText = '';
   // Validate image 1
   if (imgz1.files.length > 0 && !validTypes.includes(imgz1.files[0].type)) {
    errMess1.innerText = 'Please select a valid image file (JPEG or PNG).';
 
    isValid = false;
}

// Validate image 2
if (imgz2.files.length > 0 && !validTypes.includes(imgz2.files[0].type)) {
    errMess2.innerText = 'Please select a valid image file (JPEG or PNG).';
  
    isValid = false;
}

// Validate image 3
if (imgz3.files.length > 0 && !validTypes.includes(imgz3.files[0].type)) {
    errMess3.innerText = 'Please select a valid image file (JPEG or PNG).';

    isValid = false;
}

// Validate image 4
if (imgz4.files.length > 0 && !validTypes.includes(imgz4.files[0].type)) {
    errMess4.innerText = 'Please select a valid image file (JPEG or PNG).';
 
    isValid = false;
}

// Validate image 5
if (imgz5.files.length > 0 && !validTypes.includes(imgz5.files[0].type)) {
    errMess5.innerText = 'Please select a valid image file (JPEG or PNG).';
  
    isValid = false;
}

        if (productName === "") {
            productNameMessage.innerHTML = "Product name cannot be empty";
            isValid = false;
        } else {
            productNameMessage.innerHTML = "";
        }
    
        if (productCategory === "") {
            productCategoryMessage.innerHTML = "Product category cannot be empty";
            isValid = false;
        } else {
            productCategoryMessage.innerHTML = "";
        }
    
        if (productDescription === "") {
            productDescriptionMessage.innerHTML = "Product description cannot be empty";
            isValid = false;
        } else {
            productDescriptionMessage.innerHTML = "";
        }
    
        if (productsize === "") {
            productsizeMessage.innerHTML = "Product size cannot be empty";
            isValid = false;
        } else {
            productsizeMessage.innerHTML = "";
        }
    
        if (productPrice < 0) {
            productPriceMessage.innerHTML = "Price cannot be negative";
            isValid = false;
        }else if (!/^\d+$/.test(productPrice)) {
          productPriceMessage.innerHTML = "Should only contain numbers";
          isValid = false;
      }  
        else {
            productPriceMessage.innerHTML = "";
        }
    
        if (productcolour.trim() === "") {
            productcolourMessage.innerHTML = "Product colour cannot be empty";
            isValid = false;
        }else if (!/^[a-zA-Z]+$/.test(productcolour)) {
          productcolourMessage.innerHTML = "Should only contain alphabets";
          isValid = false;
      }
        else {
            productcolourMessage.innerHTML = "";
        }
    
        if (stockCount.trim() === "") {
            stockCountMessage.innerHTML = "Product stock cannot be empty";
            isValid = false;
        } else if (stockCount < 0) {
            stockCountMessage.innerHTML = "Stock cannot be negative";
            isValid = false;
        } else {
            stockCountMessage.innerHTML = "";
        }
    
        if (productDialShape.trim() === "") {
          productDialShapeMessage.innerHTML = "Dial shape cannot be empty";
          isValid = false;
      } else if (!/^[a-zA-Z]+$/.test(productDialShape)) {
          productDialShapeMessage.innerHTML = "Should only contain alphabets";
          isValid = false;
      } else {
          productDialShapeMessage.innerHTML = "";
      }
  
      if (productMadeIn.trim() === "") {
          productMadeInMessage.innerHTML = "cannot be empty";
          isValid = false;
      } else if (!/^[a-zA-Z]+$/.test(productMadeIn)) {
          productMadeInMessage.innerHTML = "Should only contain alphabets";
          isValid = false;
      } else {
          productMadeInMessage.innerHTML = "";
      }
  
      if (strapmaterial.trim() === "") {
          strapmaterialMessage.innerHTML = "Strap material cannot be empty";
          isValid = false;
      }
      else if (!/^[a-zA-Z]+$/.test(strapmaterial)) {
          strapmaterialMessage.innerHTML = "Should only contain alphabets";
          isValid = false;
      } else {
          strapmaterialMessage.innerHTML = "";
      }
  
      if (waterresistant.trim() === "") {
          waterresistantMessage.innerHTML = "Water resistant cannot be empty";
          isValid = false;
      } else {
          waterresistantMessage.innerHTML = "";
      }
  
      if (productdisplay.trim() === "") {
          productdisplayMessage.innerHTML = "Display cannot be empty";
          isValid = false;
      }  
       else {
          productdisplayMessage.innerHTML = "";
      }
      if (calling.trim() === "") {
          callingMessage.innerHTML = "Calling cannot be empty";
          isValid = false;
      }   else {
          callingMessage.innerHTML = "";
      }
  
      if (productfastCharge.trim() === "") {
          productfastChargeMessage.innerHTML = "Fast charge cannot be empty";
          isValid = false;
      }  else {
          productfastChargeMessage.innerHTML = "";
      }
  
      if (productbattery.trim() === "") {
          productbatteryMessage.innerHTML = "Battery cannot be empty";
          isValid = false;
      } else {
          productbatteryMessage.innerHTML = "";
      }
      if (weight.trim() === "") {
          weightMessage.innerHTML = "Weight cannot be empty";
          isValid = false;
      } else {
          weightMessage.innerHTML = "";
      }
      if (productbluetooth.trim() === "") {
          productbluetoothMessage.innerHTML = "Bluetooth cannot be empty";
          isValid = false;
      } else {
          productbluetoothMessage.innerHTML = "";
      }
  
      if (productWarranty.trim() === "") {
          productWarrantyMessage.innerHTML = "Warranty cannot be empty";
          isValid = false;
      } else {
          productWarrantyMessage.innerHTML = "";
      }
      if (productStrapColour.trim() === "") {
          productStrapColourMessage.innerHTML = "Strap colour cannot be empty";
          isValid = false;
      } else if (!/^[a-zA-Z]+$/.test(productStrapColour)) {
          productStrapColourMessage.innerHTML = "Should only contain alphabets";
          isValid = false;
      } else {
          productStrapColourMessage.innerHTML = "";
      }
  
  
      if (wifi.trim() === "") {
          wifiMessage.innerHTML = "Cannot be empty";
          isValid = false;
      } else {
          wifiMessage.innerHTML = "";
      }
  
        return isValid;
    }



  
  </script>

  <style>
    .imagebox {
      background-color: rgb(255, 255, 255);
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-between;
    }
    #img1 img,
    #img2 img,
    #img3 img,
    #img4 img,
    #img5 img {
      margin: 10px;
      width: 155px;
      height: 150px;
    }
    #img1 input,
    #img2 input,
    #img3 input,
    #img4 input,
    #img5 input {
      width: auto;
      height: auto;
      margin-bottom: 25px;
      margin-left: 10px;
    }
    #img1 label,
    #img2 label,
    #img3 label,
    #img4 label,
    #img5 label {
      width: 200px;
      height: auto;
    }
  </style>
</div>
